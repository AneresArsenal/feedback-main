"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = exports.createDataReducer = void 0;

var _actions = require("./actions");

var _reinitializeState = _interopRequireDefault(require("./reinitializeState"));

var _getSuccessState = _interopRequireDefault(require("./getSuccessState"));

var _getDeletedPatchByActivityTag = _interopRequireDefault(require("./getDeletedPatchByActivityTag"));

var _getNormalizedDeletedState = _interopRequireDefault(require("../normalize/getNormalizedDeletedState"));

var _getNormalizedMergedState = _interopRequireDefault(require("../normalize/getNormalizedMergedState"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var createDataReducer = function createDataReducer() {
  var initialState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

  var reducer = function reducer() {
    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;
    var action = arguments.length > 1 ? arguments[1] : undefined;

    if (action.type === _actions.ASSIGN_DATA) {
      return Object.assign({}, state, action.patch);
    }

    if (action.type === _actions.DELETE_DATA) {
      var patch = action.patch || state;

      if (action.config.activityTags) {
        patch = (0, _getDeletedPatchByActivityTag["default"])(patch, action.config.activityTags);
      }

      var nextState = (0, _getNormalizedDeletedState["default"])(state, patch, action.config);
      return Object.assign({}, state, nextState);
    }

    if (action.type === _actions.MERGE_DATA) {
      var _nextState = (0, _getNormalizedMergedState["default"])(state, action.patch, action.config);

      return Object.assign({}, state, _nextState);
    }

    if (action.type === _actions.REINITIALIZE_DATA) {
      return (0, _reinitializeState["default"])(state, initialState, action.config);
    }

    if (/SUCCESS_DATA_(DELETE|GET|POST|PUT|PATCH)_(.*)/.test(action.type)) {
      var _nextState2 = (0, _getSuccessState["default"])(state, action);

      return Object.assign({}, state, _nextState2);
    }

    return state;
  };

  return reducer;
};

exports.createDataReducer = createDataReducer;
var _default = createDataReducer;
exports["default"] = _default;