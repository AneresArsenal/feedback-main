"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.successData = exports.setData = exports.reinitializeData = exports.requestData = exports.failData = exports.mergeData = exports.deleteData = exports.assignData = void 0;

var _actions = require("./actions");

var _getTypeSuffixFromConfig = _interopRequireDefault(require("./getTypeSuffixFromConfig"));

var _getConfigWithDefaultValues = _interopRequireDefault(require("../fetch/getConfigWithDefaultValues"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var assignData = function assignData(patch) {
  return {
    patch: patch,
    type: _actions.ASSIGN_DATA
  };
};

exports.assignData = assignData;

var deleteData = function deleteData(patch) {
  var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  return {
    config: config,
    patch: patch,
    type: _actions.DELETE_DATA
  };
};

exports.deleteData = deleteData;

var mergeData = function mergeData(patch) {
  var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  return {
    config: config,
    patch: patch,
    type: _actions.MERGE_DATA
  };
};

exports.mergeData = mergeData;

var failData = function failData() {
  var payload = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  return {
    config: config,
    payload: payload,
    type: "FAIL_DATA_".concat((0, _getTypeSuffixFromConfig["default"])(config))
  };
};

exports.failData = failData;

var requestData = function requestData() {
  var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  var configWithDefaultValues = (0, _getConfigWithDefaultValues["default"])(config);
  return {
    config: configWithDefaultValues,
    type: "REQUEST_DATA_".concat((0, _getTypeSuffixFromConfig["default"])(configWithDefaultValues))
  };
};

exports.requestData = requestData;

var reinitializeData = function reinitializeData() {
  var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  return {
    config: config,
    type: _actions.REINITIALIZE_DATA
  };
};

exports.reinitializeData = reinitializeData;

var setData = function setData(patch) {
  return {
    patch: patch,
    type: _actions.SET_DATA
  };
};

exports.setData = setData;

var successData = function successData() {
  var payload = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  return {
    config: config,
    payload: payload,
    type: "SUCCESS_DATA_".concat((0, _getTypeSuffixFromConfig["default"])(config))
  };
};

exports.successData = successData;